apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: nats-sensor
  labels:
    sensors.argoproj.io/sensor-controller-instanceid: argo-events
spec:
  template:
    spec:
      containers:
        - name: sensor
          image: argoproj/sensor:v0.14.0
          imagePullPolicy: IfNotPresent
      serviceAccountName: argo-events-sa
  subscription:
    http:
      port: 9300
  dependencies:
    - name: test-dep
      gatewayName: nats-gateway
      eventName: example
  triggers:
    - template:
        name: nats-workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: nats-workflow-
              spec:
                entrypoint: whalesay
                arguments:
                  parameters:
                  - name: message
                    value: WILL_BE_REPLACED
                templates:
                - name: whalesay
                  inputs:
                    parameters:
                    - name: message
                  container:
                    image: docker/whalesay:latest
                    imagePyllPolicy: IfNotPresent
                    command: [cowsay]
                    args: ["{{inputs.parameters.message}}"]
          parameters:
            - src:
                dependencyName: test-dep
              dest: spec.arguments.parameters.0.value


# apiVersion: argoproj.io/v1alpha1
# kind: Sensor
# metadata:
#   name: minio-sensor
#   labels:
#     # sensor controller with instanceId "argo-events" will process this sensor
#     sensors.argoproj.io/sensor-controller-instanceid: argo-events
# spec:
#   template:
#     spec:
#       containers:
#         - name: sensor
#           image: argoproj/sensor:v0.13.0
#           imagePullPolicy: Always
#       serviceAccountName: argo-events-sa
#   subscription:
#     http:
#       port: 9300
#   dependencies:
#     - name: test-dep
#       gatewayName: minio-gateway
#       eventName: example
#   triggers:
#     - template:
#         name: minio-workflow-trigger
#         k8s:
#           group: argoproj.io
#           version: v1alpha1
#           resource: workflows
#           operation: create
#           source:
#             resource:
#               apiVersion: argoproj.io/v1alpha1
#               kind: Workflow
#               metadata:
#                 generateName: artifact-workflow-2-
#               spec:
#                 entrypoint: detect
#                 templates:
#                   - name: detect
#                     inputs:
#                       artifacts:
#                       - name: input-image
#                         path: /input
#                         s3:
#                           # endpoint: mio-minio.default.svc:9000
#                           # bucket: input  # change
#                           key: harry.jpg
#                           # insecure: true
#                           # accessKeySecret:
#                           #   key: accessKey
#                           #   name: artifacts-minio
#                           # secretKeySecret:
#                           #   key: secretKey
#                           #   name: artifacts-minio
#                           # useSDKCreds: true
#                     # outputs:
#                     #   artifacts:
#                     #   - name: output-image
#                     #     path: /output
#                     #     s3:
#                     #       endpoint: mio-minio.default.svc:9000
#                     #       bucket: output  # change
#                     #       key: PARAMETER
#                     #       insecure: true
#                     #       accessKeySecret:
#                     #         key: accessKey
#                     #         name: artifacts-minio
#                     #       secretKeySecret:
#                     #         key: secretKey
#                     #         name: artifacts-minio
#                     #       useSDKCreds: true
#                     container:
#                       image: face:latest
#                       command: [python face.py]
#                       args: ["/input", "/output"]
#           # parameters:
#           #   - src:
#           #       dependencyName: test-dep
#           #       dataKey: notification.0.s3.object.key
#           #     dest: spec.templates.0.inputs.artifacts.0.s3.key
